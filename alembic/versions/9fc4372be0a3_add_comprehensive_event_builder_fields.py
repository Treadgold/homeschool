"""Add comprehensive event builder fields

Revision ID: 9fc4372be0a3
Revises: fix_bookings_columns
Create Date: 2025-06-30 06:14:58.182008

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '9fc4372be0a3'
down_revision: Union[str, None] = 'fix_bookings_columns'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('idx_agent_sessions_conversation_id'), table_name='agent_sessions')
    op.alter_column('bookings', 'payment_status',
               existing_type=sa.VARCHAR(length=30),
               type_=sa.Enum('unpaid', 'pending', 'paid', 'refunded', 'failed', name='paymentstatus'),
               existing_nullable=True)
    op.create_foreign_key(None, 'bookings', 'ticket_types', ['ticket_type_id'], ['id'])
    op.drop_index(op.f('idx_chat_conversations_status'), table_name='chat_conversations')
    op.drop_index(op.f('idx_chat_conversations_user_id'), table_name='chat_conversations')
    op.drop_index(op.f('idx_chat_messages_conversation_id'), table_name='chat_messages')
    op.drop_index(op.f('idx_chat_messages_created_at'), table_name='chat_messages')
    op.add_column('events', sa.Column('subtitle', sa.String(length=300), nullable=True))
    op.add_column('events', sa.Column('event_format', sa.String(length=50), nullable=True))
    op.add_column('events', sa.Column('venue_name', sa.String(length=200), nullable=True))
    op.add_column('events', sa.Column('address', sa.String(length=300), nullable=True))
    op.add_column('events', sa.Column('city', sa.String(length=100), nullable=True))
    op.add_column('events', sa.Column('state', sa.String(length=100), nullable=True))
    op.add_column('events', sa.Column('zip_code', sa.String(length=20), nullable=True))
    op.add_column('events', sa.Column('country', sa.String(length=100), nullable=True))
    op.add_column('events', sa.Column('meeting_id', sa.String(length=100), nullable=True))
    op.add_column('events', sa.Column('meeting_password', sa.String(length=100), nullable=True))
    op.add_column('events', sa.Column('what_to_bring', sa.Text(), nullable=True))
    op.add_column('events', sa.Column('dress_code', sa.String(length=200), nullable=True))
    op.add_column('events', sa.Column('language', sa.String(length=50), nullable=True))
    op.add_column('events', sa.Column('accessibility_info', sa.Text(), nullable=True))
    op.add_column('events', sa.Column('parking_info', sa.Text(), nullable=True))
    op.add_column('events', sa.Column('max_participants', sa.Integer(), nullable=True))
    op.add_column('events', sa.Column('is_free', sa.Boolean(), nullable=True))
    op.add_column('events', sa.Column('requires_registration', sa.Boolean(), nullable=True))
    op.add_column('events', sa.Column('early_bird_discount', sa.Float(), nullable=True))
    op.add_column('events', sa.Column('group_discount', sa.Float(), nullable=True))
    op.add_column('events', sa.Column('member_discount', sa.Float(), nullable=True))
    op.add_column('events', sa.Column('registration_deadline', sa.DateTime(), nullable=True))
    op.add_column('events', sa.Column('video_url', sa.String(length=500), nullable=True))
    op.add_column('events', sa.Column('event_agenda', sa.Text(), nullable=True))
    op.add_column('events', sa.Column('speaker_info', sa.Text(), nullable=True))
    op.add_column('events', sa.Column('rich_description', sa.Text(), nullable=True))
    op.add_column('events', sa.Column('website_url', sa.String(length=500), nullable=True))
    op.add_column('events', sa.Column('booking_url', sa.String(length=500), nullable=True))
    op.add_column('events', sa.Column('facebook_url', sa.String(length=500), nullable=True))
    op.add_column('events', sa.Column('instagram_url', sa.String(length=500), nullable=True))
    op.add_column('events', sa.Column('twitter_url', sa.String(length=500), nullable=True))
    op.add_column('events', sa.Column('linkedin_url', sa.String(length=500), nullable=True))
    op.add_column('events', sa.Column('youtube_url', sa.String(length=500), nullable=True))
    op.add_column('events', sa.Column('tiktok_url', sa.String(length=500), nullable=True))
    op.add_column('events', sa.Column('venue_website', sa.String(length=500), nullable=True))
    op.add_column('events', sa.Column('partner_url', sa.String(length=500), nullable=True))
    op.add_column('events', sa.Column('related_events', sa.Text(), nullable=True))
    op.add_column('events', sa.Column('contact_name', sa.String(length=200), nullable=True))
    op.add_column('events', sa.Column('contact_email', sa.String(length=255), nullable=True))
    op.add_column('events', sa.Column('contact_phone', sa.String(length=50), nullable=True))
    op.add_column('events', sa.Column('emergency_contact', sa.String(length=50), nullable=True))
    op.add_column('events', sa.Column('terms_url', sa.String(length=500), nullable=True))
    op.add_column('events', sa.Column('privacy_policy_url', sa.String(length=500), nullable=True))
    op.add_column('events', sa.Column('featured_event', sa.Boolean(), nullable=True))
    op.add_column('events', sa.Column('send_notifications', sa.Boolean(), nullable=True))
    op.add_column('events', sa.Column('publish_date', sa.DateTime(), nullable=True))
    op.add_column('events', sa.Column('seo_keywords', sa.String(length=500), nullable=True))
    op.alter_column('events', 'recurrence_pattern',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               type_=sa.JSON(),
               existing_nullable=True)
    op.alter_column('events', 'brand_colors',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               type_=sa.JSON(),
               existing_nullable=True)
    op.alter_column('events', 'gallery_images',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               type_=sa.JSON(),
               existing_nullable=True)
    op.create_foreign_key(None, 'events', 'users', ['created_by'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'events', type_='foreignkey')
    op.alter_column('events', 'gallery_images',
               existing_type=sa.JSON(),
               type_=postgresql.JSONB(astext_type=sa.Text()),
               existing_nullable=True)
    op.alter_column('events', 'brand_colors',
               existing_type=sa.JSON(),
               type_=postgresql.JSONB(astext_type=sa.Text()),
               existing_nullable=True)
    op.alter_column('events', 'recurrence_pattern',
               existing_type=sa.JSON(),
               type_=postgresql.JSONB(astext_type=sa.Text()),
               existing_nullable=True)
    op.drop_column('events', 'seo_keywords')
    op.drop_column('events', 'publish_date')
    op.drop_column('events', 'send_notifications')
    op.drop_column('events', 'featured_event')
    op.drop_column('events', 'privacy_policy_url')
    op.drop_column('events', 'terms_url')
    op.drop_column('events', 'emergency_contact')
    op.drop_column('events', 'contact_phone')
    op.drop_column('events', 'contact_email')
    op.drop_column('events', 'contact_name')
    op.drop_column('events', 'related_events')
    op.drop_column('events', 'partner_url')
    op.drop_column('events', 'venue_website')
    op.drop_column('events', 'tiktok_url')
    op.drop_column('events', 'youtube_url')
    op.drop_column('events', 'linkedin_url')
    op.drop_column('events', 'twitter_url')
    op.drop_column('events', 'instagram_url')
    op.drop_column('events', 'facebook_url')
    op.drop_column('events', 'booking_url')
    op.drop_column('events', 'website_url')
    op.drop_column('events', 'rich_description')
    op.drop_column('events', 'speaker_info')
    op.drop_column('events', 'event_agenda')
    op.drop_column('events', 'video_url')
    op.drop_column('events', 'registration_deadline')
    op.drop_column('events', 'member_discount')
    op.drop_column('events', 'group_discount')
    op.drop_column('events', 'early_bird_discount')
    op.drop_column('events', 'requires_registration')
    op.drop_column('events', 'is_free')
    op.drop_column('events', 'max_participants')
    op.drop_column('events', 'parking_info')
    op.drop_column('events', 'accessibility_info')
    op.drop_column('events', 'language')
    op.drop_column('events', 'dress_code')
    op.drop_column('events', 'what_to_bring')
    op.drop_column('events', 'meeting_password')
    op.drop_column('events', 'meeting_id')
    op.drop_column('events', 'country')
    op.drop_column('events', 'zip_code')
    op.drop_column('events', 'state')
    op.drop_column('events', 'city')
    op.drop_column('events', 'address')
    op.drop_column('events', 'venue_name')
    op.drop_column('events', 'event_format')
    op.drop_column('events', 'subtitle')
    op.create_index(op.f('idx_chat_messages_created_at'), 'chat_messages', ['created_at'], unique=False)
    op.create_index(op.f('idx_chat_messages_conversation_id'), 'chat_messages', ['conversation_id'], unique=False)
    op.create_index(op.f('idx_chat_conversations_user_id'), 'chat_conversations', ['user_id'], unique=False)
    op.create_index(op.f('idx_chat_conversations_status'), 'chat_conversations', ['status'], unique=False)
    op.drop_constraint(None, 'bookings', type_='foreignkey')
    op.alter_column('bookings', 'payment_status',
               existing_type=sa.Enum('unpaid', 'pending', 'paid', 'refunded', 'failed', name='paymentstatus'),
               type_=sa.VARCHAR(length=30),
               existing_nullable=True)
    op.create_index(op.f('idx_agent_sessions_conversation_id'), 'agent_sessions', ['conversation_id'], unique=False)
    # ### end Alembic commands ###
